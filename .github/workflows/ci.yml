name: Upload All Artifacts to Existing Release

on:
  push:
    tags:
      - 'v*'  # Запускается при пуше тега, соответствующего версии, например, v1.0.0
  workflow_dispatch:

jobs:
  upload:
    name: Upload All Artifacts to Existing Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.5'

      - name: Build binaries
        run: |
          VERSION=$(echo ${GITHUB_REF#refs/tags/})
          GOOS=linux GOARCH=amd64 go build -ldflags="-X main.version=$VERSION" -o backup_uploader_linux_amd64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.version=$VERSION" -o backup_uploader_darwin_amd64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-X main.version=$VERSION" -o backup_uploader_darwin_arm64
          GOOS=windows GOARCH=amd64 go build -ldflags="-X main.version=$VERSION" -o backup_uploader_windows_amd64

      - name: Create distr directory and move binaries
        run: |
          mkdir -p distr
          mv backup_uploader_* ./distr/

      - name: Get the upload URL for the release
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: context.ref.replace('refs/tags/', ''),
            });
            core.setOutput('upload_url', release.upload_url.replace('{?name,label}', ''));

      - name: Upload each artifact separately
        run: |
          for file in ./distr/*; do
            name=$(basename "$file")
            echo "Uploading $name..."
            curl -X POST \
              -H "Authorization: token ${{ secrets.CI_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "${{ steps.get_release.outputs.upload_url }}?name=$name"
          done